<included>

    <!-- spring变量 -->
    <springProperty scope="context" name="LOG_HOME" source="logback.path"/>
    <!-- 应用名称 -->
    <springProperty scope="context" name="SERVICE_NAME" source="spring.application.name"/>
    <springProperty scope="context" name="CLIENT_IP" source="spring.cloud.client.ip-address"/>

    <!-- 日志格式 -->
    <property name="LOG_PATTERN"
              value="[%d{yyyy-MM-dd HH:mm:ss.SSS}][%-5level][%thread][ip:${CLIENT_IP:-}][xid:%X{X-Trace-Id}] %logger{36}:%line - %msg%n"/>
    <!-- 日志字符集 -->
    <property name="LOG_CHARSET" value="UTF-8"/>
    <!-- 单个文件大小上限 -->
    <property name="LOG_FILE_MAX_SIZE" value="1MB"/>
    <!-- 日志保留天数 -->
    <property name="LOG_FILE_MAX_HISTORY" value="7"/>
    <!-- 日志文件得上限大小,如果到达这个值就会删除旧日志 -->
    <property name="LOG_FILE_TOTAL_SIZE_CAP" value="0"/>
    <!-- 日志保存目录 -->
    <property name="LOG_HOME" value="./logs/${SERVICE_NAME}"/>

    <!-- 输出到控制台 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>${LOG_CHARSET}</charset>
        </encoder>
    </appender>

    <!-- 每天生成滚动日志 -->
    <appender name="ROLLING_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_HOME}/app.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/${SERVICE_NAME}-%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <!-- 单个文件大小上限 -->
            <maxFileSize>${LOG_FILE_MAX_SIZE}</maxFileSize>
            <!-- 日志保留天数 -->
            <maxHistory>${LOG_FILE_MAX_HISTORY}</maxHistory>
            <!-- 日志文件得上限大小,如果到达这个值就会删除旧日志 -->
            <totalSizeCap>${LOG_FILE_TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>${LOG_CHARSET}</charset>
        </encoder>
    </appender>

    <!--
        异步缓冲刷盘
        当队列满时会阻塞业务线程，此时异步处理会变成同步等待
     -->
    <appender name="ASYNC_CONSOLE" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 当队列剩余容量小于discardingThreshold，只会打印WARN、ERROR级别日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 阻塞队列容量 -->
        <queueSize>256</queueSize>
        <maxFlushTime>1000</maxFlushTime>
        <!-- 默认为false，为了提高性能，默认不会获取调用者信息，只会复制线程名或者MDC这种 -->
        <includeCallerData>true</includeCallerData>
        <appender-ref ref="CONSOLE"/>
    </appender>

    <appender name="ASYNC_ROLLING_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 当队列剩余容量小于discardingThreshold，只会打印WARN、ERROR级别日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 阻塞队列容量 -->
        <queueSize>512</queueSize>
        <maxFlushTime>1000</maxFlushTime>
        <!-- 默认为false，为了提高性能，默认不会获取调用者信息，只会复制线程名或者MDC这种 -->
        <includeCallerData>true</includeCallerData>
        <appender-ref ref="ROLLING_FILE"/>
    </appender>

    <root level="info">
        <!--        <springProfile name="local,dev,test,sit">-->
        <!--            &lt;!&ndash; local本地配置时候打开控制台输出 &ndash;&gt;-->
        <!--            <appender-ref ref="CONSOLE"/>-->
        <!--        </springProfile>-->
        <appender-ref ref="ASYNC_CONSOLE"/>
        <appender-ref ref="ASYNC_ROLLING_FILE"/>
    </root>
</included>